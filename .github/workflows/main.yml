name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: |
          mkdir -p app
          echo "$GOOGLE_SERVICES_JSON" | base64 --decode > app/google-services.json

#      - name: Confirm google-services.json exists and is valid JSON
#        run: |
#          if [ ! -s app/google-services.json ]; then
#            echo "google-services.json is missing or empty"
#            exit 1
#          fi
#          jq . app/google-services.json

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.2
          ndk: 25.2.9519653
          cmake: 3.22.1

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          arch: x86_64
          disable-linux-hw-accel: true
          disable-animations: true
          emulator-options: >-
            -no-snapshot
            -no-boot-anim
            -no-window
            -no-audio
            -memory 2048
            -cores 2
            -partition-size 2048

#          script: |
#            # Wait for emulator fully ready
#            adb wait-for-device
#            while [[ -z $(adb shell getprop sys.boot_completed 2>/dev/null) ]]; do
#              sleep 5
#              echo "Waiting for boot completion..."
#            done
#            echo "Emulator ready!"
#            ./gradlew connectedCheck

          script: |
            adb wait-for-device
            boot_completed=""
            until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "Waiting for emulator to fully boot..."
            sleep 5
            done
            echo "Emulator is ready!"
            ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 23

      - name: SonarCloud Scan
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk
