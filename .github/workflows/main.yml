name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Upload html test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: lint.html
#          path: app/build/reports/lint-results-debug.html
#
#  unit-test:
#    needs: [lint]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Decode google-services.json
#        env:
#          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
#        run: |
#          mkdir -p app
#          echo "$GOOGLE_SERVICES_JSON" | base64 --decode > app/google-services.json
#
#      - name: Run tests
#        run: ./gradlew test
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: unit_test_report
#          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
#    needs: [unit-test]
    runs-on: macos-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 35
          target: google_apis
          arch: arm64-v8a
          script: ./gradlew connectedCheck

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

#  static-code-analysis:
#    needs: [instrumentation-test]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 23
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 23
#
#      - name: SonarCloud Scan
#        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    needs: [instrumentation-test]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: 23

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: expense-manager.apk
          path: app/build/outputs/apk/debug/app-debug.apk
